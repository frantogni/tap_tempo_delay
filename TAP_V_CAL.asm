
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
_USED			EQU	1

	INCLUDE	"F:\PBP\16F886.INC"


; Define statements.
; F:\PBP\16F886.BAS        	00018	DEFINE  CODE_SIZE 8
#define		CODE_SIZE		 8
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00032	DEFINE  LCD_DREG        PORTB
#define		LCD_DREG		        PORTB
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00033	DEFINE  LCD_DBIT        4
#define		LCD_DBIT		        4
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00034	DEFINE  LCD_BITS        4
#define		LCD_BITS		        4
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00035	DEFINE  LCD_RSREG       PORTB
#define		LCD_RSREG		       PORTB
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00036	DEFINE  LCD_RSBIT       3
#define		LCD_RSBIT		       3
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00037	DEFINE  LCD_EREG        PORTB
#define		LCD_EREG		        PORTB
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00038	DEFINE  LCD_EBIT        2
#define		LCD_EBIT		        2
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00039	DEFINE  LCD_LINES       4
#define		LCD_LINES		       4
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00040	DEFINE  LCD_COMMANDUS   2000  
#define		LCD_COMMANDUS		   2000  
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00041	DEFINE  LCD_DATAUS      50
#define		LCD_DATAUS		      50

RAM_START       		EQU	00020h
RAM_END         		EQU	001EFh
RAM_BANKS       		EQU	00004h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00110h
BANK2_END       		EQU	0016Fh
BANK3_START     		EQU	00190h
BANK3_END       		EQU	001EFh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	021FFh

; F:\PBP\PBPPIC14.RAM      	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; F:\PBP\PBPPIC14.RAM      	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; F:\PBP\PBPPIC14.RAM      	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; F:\PBP\PBPPIC14.RAM      	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; F:\PBP\PBPPIC14.RAM      	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; F:\PBP\PBPPIC14.RAM      	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; F:\PBP\PBPPIC14.RAM      	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; F:\PBP\PBPPIC14.RAM      	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; F:\PBP\PBPPIC14.RAM      	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; F:\PBP\PBPPIC14.RAM      	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; F:\PBP\PBPPIC14.RAM      	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; F:\PBP\PBPPIC14.RAM      	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; F:\PBP\PBPPIC14.RAM      	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; F:\PBP\PBPPIC14.RAM      	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; F:\PBP\PBPPIC14.RAM      	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00001	A00038	@__config _CONFIG1,0x2004
T1              		EQU	RAM_START + 018h
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00001	A0003A	@__config _CONFIG1,0x2004
T2              		EQU	RAM_START + 01Ah
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00045	A0003C	VALOR_PR        VAR WORD
_VALOR_PR        		EQU	RAM_START + 01Ch
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00046	A0003E	BUCLE           VAR BYTE
_BUCLE           		EQU	RAM_START + 01Eh
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00048	A0003F	DELAY           VAR BYTE
_DELAY           		EQU	RAM_START + 01Fh
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00047	A00040	DESBORDE        VAR BYTE
_DESBORDE        		EQU	RAM_START + 020h
; F:\PBP\16F886.BAS        	00022	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; F:\PBP\16F886.BAS        	00023	PORTH   VAR     PORTC
_PORTH           		EQU	 PORTC
; F:\PBP\16F886.BAS        	00024	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; F:\PBP\16F886.BAS        	00025	TRISH   VAR     TRISC
_TRISH           		EQU	 TRISC
_VALOR_PR??BYTE0 		EQU	_VALOR_PR
_VALOR_PR??BYTE1 		EQU	_VALOR_PR + 001h
#define _PIE1??0         	 PIE1, 000h
#define _T1CON??0        	 T1CON, 000h
#define _PORTA??6        	 PORTA, 006h
#define _CM1CON0??6      	 CM1CON0, 006h
#define _PORTC??4        	 PORTC, 004h
#define _PIR1??0         	 PIR1, 000h
	INCLUDE	"TAP_V_~1.MAC"
	INCLUDE	"F:\PBP\PBPPIC14.LIB"


; F:\PBP\16F886.BAS        	00012	BANK0   $0020, $007F
; F:\PBP\16F886.BAS        	00013	BANK1   $00A0, $00EF
; F:\PBP\16F886.BAS        	00014	BANK2   $0110, $016F
; F:\PBP\16F886.BAS        	00015	BANK3   $0190, $01EF
; F:\PBP\16F886.BAS        	00016	EEPROM  $2100, $21FF
; F:\PBP\16F886.BAS        	00017	LIBRARY "PBPPIC14"
; F:\PBP\16F886.BAS        	00018	DEFINE  CODE_SIZE 8

; F:\PBP\16F886.BAS        	00020	        include "PIC14EXT.BAS"

; F:\PBP\16F886.BAS        	00027	        include "PBPPIC14.RAM"

; F:\PBP\16F886.BAS        	00029		ADCON0 = $c0	' Start off with RC
	MOVE?CB	0C0h, ADCON0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00001	@__config _CONFIG1,0x2004

	ASM?
__config _CONFIG1,0x2004

	ENDASM?


; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00002	@__config _CONFIG2,0x3fff

	ASM?
__config _CONFIG2,0x3fff

	ENDASM?


; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00004	OSCCON      = %01110111 
	MOVE?CB	077h, OSCCON

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00005	TRISA       = %10001111
	MOVE?CB	08Fh, TRISA

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00006	TRISB       = %00000000
	MOVE?CB	000h, TRISB

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00007	TRISC       = %00010000
	MOVE?CB	010h, TRISC

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00008	WPUB        = %00000000                 
	MOVE?CB	000h, WPUB

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00009	OPTION_REG  = %00000000
	MOVE?CB	000h, OPTION_REG

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00010	INTCON      = %11000000
	MOVE?CB	0C0h, INTCON

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00011	IOCB        = %00000000
	MOVE?CB	000h, IOCB

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00012	PIE1        = %00000000
	MOVE?CB	000h, PIE1

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00013	PIE2        = %00000000
	MOVE?CB	000h, PIE2

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00014	PIR1        = %00000000
	MOVE?CB	000h, PIR1

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00015	PIR2        = %00000000
	MOVE?CB	000h, PIR2

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00016	ANSEL       = %00001011
	MOVE?CB	00Bh, ANSEL

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00017	ANSELH      = %00000000
	MOVE?CB	000h, ANSELH

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00018	ADCON0      = %00000001
	MOVE?CB	001h, ADCON0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00019	ADCON1      = %10000000
	MOVE?CB	080h, ADCON1

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00020	CM1CON0     = %10100001
	MOVE?CB	0A1h, CM1CON0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00021	CM2CON0     = %00000000
	MOVE?CB	000h, CM2CON0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00022	CM2CON1     = %00000000
	MOVE?CB	000h, CM2CON1

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00023	SRCON       = %00000000
	MOVE?CB	000h, SRCON

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00024	T1CON       = %00000000
	MOVE?CB	000h, T1CON

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00025	CCP1CON     = %00001111
	MOVE?CB	00Fh, CCP1CON

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00026	CCP2CON     = %00000000
	MOVE?CB	000h, CCP2CON

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00027	ECCPAS      = %00000000
	MOVE?CB	000h, ECCPAS

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00028	PSTRCON     = %00000001
	MOVE?CB	001h, PSTRCON

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00030	on interrupt goto interrupcion
	ONINT?LL	_interrupcion, L00001
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00032	DEFINE  LCD_DREG        PORTB
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00033	DEFINE  LCD_DBIT        4
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00034	DEFINE  LCD_BITS        4
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00035	DEFINE  LCD_RSREG       PORTB
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00036	DEFINE  LCD_RSBIT       3
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00037	DEFINE  LCD_EREG        PORTB
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00038	DEFINE  LCD_EBIT        2
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00039	DEFINE  LCD_LINES       4
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00040	DEFINE  LCD_COMMANDUS   2000  
; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00041	DEFINE  LCD_DATAUS      50

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00043	pause 1000
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00050	INICIO:        

	LABEL?L	_INICIO	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00051	    DESBORDE        = 0               
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00052	    TMR1H           = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00053	    TMR1L           = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00054	    PIE1.0          = 1                                                                                             
	ICALL?L	L00001
	MOVE?CT	001h, _PIE1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00055	    T1CON.0         = 1
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00056	    ADRESL          = 0
	ICALL?L	L00001
	MOVE?CB	000h, ADRESL

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00057	    ADRESH          = 0
	ICALL?L	L00001
	MOVE?CB	000h, ADRESH

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00058	    DELAY           = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DELAY

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00060	    lcdout $fe,1
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00061	    lcdout $FE,$80,"init"
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUT?C	069h
	LCDOUT?C	06Eh
	LCDOUT?C	069h
	LCDOUT?C	074h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00062	    pause 1000
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00063	    lcdout $fe,1
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00065	    delay = 255
	ICALL?L	L00001
	MOVE?CB	0FFh, _DELAY

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00066	    HPWM 1,DELAY,255
	ICALL?L	L00001
	HPWM?CBC	001h, _DELAY, 0FFh

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00067	    pause 1000
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00068	aca:     

	LABEL?L	_aca	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00069	    PIE1.0          = 0
	ICALL?L	L00001
	MOVE?CT	000h, _PIE1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00070	    T1CON.0         = 0
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00071	    PIE1.0          = 1                                                                                             
	ICALL?L	L00001
	MOVE?CT	001h, _PIE1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00072	    T1CON.0         = 1                  
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00073	    FREQOUT PORTA.6,2,500
	ICALL?L	L00001
	FREQOUTPIN?T	_PORTA??6
	FREQOUTTIME?C	002h
	FREQOUT?C	001F4h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00074	a:

	LABEL?L	_a	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00075	    IF CM1CON0.6 = 0 THEN a                               
	ICALL?L	L00001
	CMPEQ?TCL	_CM1CON0??6, 000h, _a

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00076	    T1CON.0     = 0
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00077	    PIE1.0      = 0    
	ICALL?L	L00001
	MOVE?CT	000h, _PIE1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00078	    VALOR_PR.BYTE0 = TMR1L
	ICALL?L	L00001
	MOVE?BB	TMR1L, _VALOR_PR??BYTE0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00079	    VALOR_PR.BYTE1 = TMR1H                
	ICALL?L	L00001
	MOVE?BB	TMR1H, _VALOR_PR??BYTE1

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00081	    lcdout $FE,$80,DEC3 DELAY,$FE,$C0,DEC2 DESBORDE,$FE,$C3,DEC5 VALOR_PR
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUTCOUNT?C	003h
	LCDOUTNUM?B	_DELAY
	LCDOUTDEC?	
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_DESBORDE
	LCDOUTDEC?	
	LCDOUT?C	0FEh
	LCDOUT?C	0C3h
	LCDOUTCOUNT?C	005h
	LCDOUTNUM?W	_VALOR_PR
	LCDOUTDEC?	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00083	    TMR1L = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00084	    TMR1H = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00085	    DESBORDE = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00086	    PAUSE 1000       
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00087	    if portc.4 = 1 then goto calibracion
	ICALL?L	L00001
	CMPNE?TCL	_PORTC??4, 001h, L00002
	GOTO?L	_calibracion
	LABEL?L	L00002	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00088	    goto aca    
	ICALL?L	L00001
	GOTO?L	_aca

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00091	CALIBRACION:

	LABEL?L	_calibracion	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00092	    delay = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DELAY

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00093	    HPWM 1,DELAY,255
	ICALL?L	L00001
	HPWM?CBC	001h, _DELAY, 0FFh

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00094	    pause 1000
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00095	    PIE1.0          = 0
	ICALL?L	L00001
	MOVE?CT	000h, _PIE1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00096	    T1CON.0         = 0                             
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00097	PULSO:        

	LABEL?L	_PULSO	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00098	    PIE1.0          = 1                                                                                             
	ICALL?L	L00001
	MOVE?CT	001h, _PIE1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00099	    T1CON.0         = 1                           
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00100	    FREQOUT PORTA.6,2,1500
	ICALL?L	L00001
	FREQOUTPIN?T	_PORTA??6
	FREQOUTTIME?C	002h
	FREQOUT?C	005DCh

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00101	B:

	LABEL?L	_B	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00102	    IF CM1CON0.6 = 0 THEN B                               
	ICALL?L	L00001
	CMPEQ?TCL	_CM1CON0??6, 000h, _B

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00103	    T1CON.0     = 0
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00104	    PIE1.0      = 0    
	ICALL?L	L00001
	MOVE?CT	000h, _PIE1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00105	    VALOR_PR.BYTE0 = TMR1L
	ICALL?L	L00001
	MOVE?BB	TMR1L, _VALOR_PR??BYTE0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00106	    VALOR_PR.BYTE1 = TMR1H                
	ICALL?L	L00001
	MOVE?BB	TMR1H, _VALOR_PR??BYTE1

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00108	    lcdout $FE,$80,DEC3 DELAY,$FE,$C0,DEC2 DESBORDE,$FE,$C3,DEC5 VALOR_PR
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUTCOUNT?C	003h
	LCDOUTNUM?B	_DELAY
	LCDOUTDEC?	
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_DESBORDE
	LCDOUTDEC?	
	LCDOUT?C	0FEh
	LCDOUT?C	0C3h
	LCDOUTCOUNT?C	005h
	LCDOUTNUM?W	_VALOR_PR
	LCDOUTDEC?	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00110	    TMR1L = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00111	    TMR1H = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00112	    DESBORDE = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00114	    DELAY = DELAY - 1
	ICALL?L	L00001
	SUB?BCB	_DELAY, 001h, _DELAY

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00115	    HPWM 1,DELAY,255
	ICALL?L	L00001
	HPWM?CBC	001h, _DELAY, 0FFh

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00116	    PAUSE 1000    
	ICALL?L	L00001
	PAUSE?C	003E8h

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00118	    GOTO PULSO   
	ICALL?L	L00001
	GOTO?L	_PULSO

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00120	disable    
	DISABLE?	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00121	INTERRUPCION:           

	LABEL?L	_interrupcion	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00123	    if ((PIE1.0 = 1) AND (PIR1.0 = 1)) THEN
	CMPEQ?TCB	_PIE1??0, 001h, T1
	CMPEQ?TCB	_PIR1??0, 001h, T2
	LAND?BBW	T1, T2, T2
	CMPF?WL	T2, L00004

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00124	        DESBORDE    = DESBORDE + 1                       
	ADD?BCB	_DESBORDE, 001h, _DESBORDE

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00125	        PIR1.0      = 0                       
	MOVE?CT	000h, _PIR1??0

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00126	    ENDIF
	LABEL?L	L00004	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00128	RESUME
	RESUME?	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00129	ENABLE           
	ENABLE?	

; G:\ELECTRO\@BASIC\TAP_V_~1.PBP	00131	END
	ICALL?L	L00001
	END?	

	END
