
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
_USED			EQU	1

	INCLUDE	"C:\PBP\16F886.INC"


; Define statements.
; C:\PBP\16F886.BAS        	00018	DEFINE  CODE_SIZE 8
#define		CODE_SIZE		 8

RAM_START       		EQU	00020h
RAM_END         		EQU	001EFh
RAM_BANKS       		EQU	00004h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00110h
BANK2_END       		EQU	0016Fh
BANK3_START     		EQU	00190h
BANK3_END       		EQU	001EFh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	021FFh

; C:\PBP\PBPPIC14.RAM      	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; C:\PBP\PBPPIC14.RAM      	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; C:\PBP\PBPPIC14.RAM      	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; C:\PBP\PBPPIC14.RAM      	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; C:\PBP\PBPPIC14.RAM      	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; C:\PBP\PBPPIC14.RAM      	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; C:\PBP\PBPPIC14.RAM      	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; C:\PBP\PBPPIC14.RAM      	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; C:\PBP\PBPPIC14.RAM      	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; C:\PBP\PBPPIC14.RAM      	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; C:\PBP\PBPPIC14.RAM      	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; C:\PBP\PBPPIC14.RAM      	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; C:\PBP\PBPPIC14.RAM      	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; C:\PBP\PBPPIC14.RAM      	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; C:\PBP\PBPPIC14.RAM      	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; G:\ELE\@BASIC\TAP_V60.PBP	00045	A00038	VALOR       VAR WORD[10]
_VALOR           		EQU	RAM_START + 018h
; G:\ELE\@BASIC\TAP_V60.PBP	00046	A0004C	BUCLE       VAR BYTE[10]
_BUCLE           		EQU	RAM_START + 02Ch
; G:\ELE\@BASIC\TAP_V60.PBP	00038	A00056	adc_a       VAR WORD
_adc_a           		EQU	RAM_START + 036h
; G:\ELE\@BASIC\TAP_V60.PBP	00039	A00058	adc_l       VAR WORD
_adc_l           		EQU	RAM_START + 038h
; G:\ELE\@BASIC\TAP_V60.PBP	00049	A0005A	DIVISION    VAR WORD
_DIVISION        		EQU	RAM_START + 03Ah
; G:\ELE\@BASIC\TAP_V60.PBP	00001	A0005C	OSCCON      = %01110111 
T1              		EQU	RAM_START + 03Ch
; G:\ELE\@BASIC\TAP_V60.PBP	00001	A0005E	OSCCON      = %01110111 
T2              		EQU	RAM_START + 03Eh
; G:\ELE\@BASIC\TAP_V60.PBP	00042	A00060	TIEMPO      VAR WORD
_TIEMPO          		EQU	RAM_START + 040h
; G:\ELE\@BASIC\TAP_V60.PBP	00043	A00062	VALOR_PR    VAR WORD
_VALOR_PR        		EQU	RAM_START + 042h
; G:\ELE\@BASIC\TAP_V60.PBP	00044	A00064	BUCLE_PR    VAR BYTE
_BUCLE_PR        		EQU	RAM_START + 044h
; G:\ELE\@BASIC\TAP_V60.PBP	00047	A00065	CLICKS      VAR BYTE
_CLICKS          		EQU	RAM_START + 045h
; G:\ELE\@BASIC\TAP_V60.PBP	00040	A00066	contador    VAR BYTE
_contador        		EQU	RAM_START + 046h
; G:\ELE\@BASIC\TAP_V60.PBP	00041	A00067	delay       VAR BYTE
_delay           		EQU	RAM_START + 047h
; G:\ELE\@BASIC\TAP_V60.PBP	00048	A00068	DESBORDE    VAR BYTE
_DESBORDE        		EQU	RAM_START + 048h
; G:\ELE\@BASIC\TAP_V60.PBP	00051	A00069	DUMMY       VAR BYTE	;DUMMY.0=POTE DELAY/DIV, DUMMY.1 = FLASH, DUMMY.2=OCUPADO
_DUMMY           		EQU	RAM_START + 049h
; C:\PBP\16F886.BAS        	00022	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; C:\PBP\16F886.BAS        	00023	PORTH   VAR     PORTC
_PORTH           		EQU	 PORTC
; C:\PBP\16F886.BAS        	00024	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; C:\PBP\16F886.BAS        	00025	TRISH   VAR     TRISC
_TRISH           		EQU	 TRISC
_VALOR??BYTE0    		EQU	_VALOR
_VALOR??BYTE1    		EQU	_VALOR + 001h
_VALOR_PR??BYTE0 		EQU	_VALOR_PR
_VALOR_PR??BYTE1 		EQU	_VALOR_PR + 001h
#define _tbp_sw          	_PORTA??1
#define _tap_sw          	_PORTA??2
#define _tbp             	_PORTB??0
#define _tail            	_PORTB??1
#define _led_tap         	_PORTA??7
#define _led_tbp         	_PORTA??6
#define _PORTA??1        	 PORTA, 001h
#define _PORTA??2        	 PORTA, 002h
#define _PORTB??0        	 PORTB, 000h
#define _PORTB??1        	 PORTB, 001h
#define _PORTA??7        	 PORTA, 007h
#define _PORTA??6        	 PORTA, 006h
#define _T1CON??0        	 T1CON, 000h
#define _ADCON0??1       	 ADCON0, 001h
#define _PIR1??6         	 PIR1, 006h
#define _DUMMY??1        	_DUMMY, 001h
#define _INTCON??2       	 INTCON, 002h
	INCLUDE	"TAP_V60.MAC"
	INCLUDE	"C:\PBP\PBPPIC14.LIB"


; C:\PBP\16F886.BAS        	00012	BANK0   $0020, $007F
; C:\PBP\16F886.BAS        	00013	BANK1   $00A0, $00EF
; C:\PBP\16F886.BAS        	00014	BANK2   $0110, $016F
; C:\PBP\16F886.BAS        	00015	BANK3   $0190, $01EF
; C:\PBP\16F886.BAS        	00016	EEPROM  $2100, $21FF
; C:\PBP\16F886.BAS        	00017	LIBRARY "PBPPIC14"
; C:\PBP\16F886.BAS        	00018	DEFINE  CODE_SIZE 8

; C:\PBP\16F886.BAS        	00020	        include "PIC14EXT.BAS"

; C:\PBP\16F886.BAS        	00027	        include "PBPPIC14.RAM"

; C:\PBP\16F886.BAS        	00029		ADCON0 = $c0	' Start off with RC
	MOVE?CB	0C0h, ADCON0

; G:\ELE\@BASIC\TAP_V60.PBP	00001	OSCCON      = %01110111 
	MOVE?CB	077h, OSCCON

; G:\ELE\@BASIC\TAP_V60.PBP	00002	TRISA       = %00010111
	MOVE?CB	017h, TRISA

; G:\ELE\@BASIC\TAP_V60.PBP	00003	TRISB       = %00000000
	MOVE?CB	000h, TRISB

; G:\ELE\@BASIC\TAP_V60.PBP	00004	TRISC       = %00000000
	MOVE?CB	000h, TRISC

; G:\ELE\@BASIC\TAP_V60.PBP	00005	WPUB        = %00000000                 
	MOVE?CB	000h, WPUB

; G:\ELE\@BASIC\TAP_V60.PBP	00006	OPTION_REG  = %00100011
	MOVE?CB	023h, OPTION_REG

; G:\ELE\@BASIC\TAP_V60.PBP	00007	INTCON      = %11100000		
	MOVE?CB	0E0h, INTCON

; G:\ELE\@BASIC\TAP_V60.PBP	00008	IOCB        = %00000000		
	MOVE?CB	000h, IOCB

; G:\ELE\@BASIC\TAP_V60.PBP	00009	PIE1        = %00000000             
	MOVE?CB	000h, PIE1

; G:\ELE\@BASIC\TAP_V60.PBP	00010	PIE2        = %00000000		
	MOVE?CB	000h, PIE2

; G:\ELE\@BASIC\TAP_V60.PBP	00011	PIR1        = %00000000
	MOVE?CB	000h, PIR1

; G:\ELE\@BASIC\TAP_V60.PBP	00012	PIR2        = %00000000
	MOVE?CB	000h, PIR2

; G:\ELE\@BASIC\TAP_V60.PBP	00013	ANSEL       = %00000001
	MOVE?CB	001h, ANSEL

; G:\ELE\@BASIC\TAP_V60.PBP	00014	ANSELH      = %00000000
	MOVE?CB	000h, ANSELH

; G:\ELE\@BASIC\TAP_V60.PBP	00015	ADCON0      = %11000001
	MOVE?CB	0C1h, ADCON0

; G:\ELE\@BASIC\TAP_V60.PBP	00016	ADCON1      = %10000000
	MOVE?CB	080h, ADCON1

; G:\ELE\@BASIC\TAP_V60.PBP	00017	CM1CON0     = %00000000		
	MOVE?CB	000h, CM1CON0

; G:\ELE\@BASIC\TAP_V60.PBP	00018	CM2CON0     = %00000000
	MOVE?CB	000h, CM2CON0

; G:\ELE\@BASIC\TAP_V60.PBP	00019	CM2CON1     = %00000000
	MOVE?CB	000h, CM2CON1

; G:\ELE\@BASIC\TAP_V60.PBP	00020	VRCON		= %00000000		
	MOVE?CB	000h, VRCON

; G:\ELE\@BASIC\TAP_V60.PBP	00021	SRCON       = %00000000
	MOVE?CB	000h, SRCON

; G:\ELE\@BASIC\TAP_V60.PBP	00022	T1CON       = %00000000
	MOVE?CB	000h, T1CON

; G:\ELE\@BASIC\TAP_V60.PBP	00023	CCP1CON     = %00001100
	MOVE?CB	00Ch, CCP1CON

; G:\ELE\@BASIC\TAP_V60.PBP	00024	CCP2CON     = %00000000
	MOVE?CB	000h, CCP2CON

; G:\ELE\@BASIC\TAP_V60.PBP	00025	ECCPAS      = %00000000
	MOVE?CB	000h, ECCPAS

; G:\ELE\@BASIC\TAP_V60.PBP	00026	PSTRCON     = %00000001
	MOVE?CB	001h, PSTRCON

; G:\ELE\@BASIC\TAP_V60.PBP	00027	SSPCON      = %00000101
	MOVE?CB	005h, SSPCON

; G:\ELE\@BASIC\TAP_V60.PBP	00029	on interrupt goto interrupcion
	ONINT?LL	_interrupcion, L00001

; G:\ELE\@BASIC\TAP_V60.PBP	00053	INICIO:

	LABEL?L	_INICIO	

; G:\ELE\@BASIC\TAP_V60.PBP	00054	    T1CON.0     = 0
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELE\@BASIC\TAP_V60.PBP	00055		PORTA		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTA

; G:\ELE\@BASIC\TAP_V60.PBP	00056		PORTB		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTB

; G:\ELE\@BASIC\TAP_V60.PBP	00057		PORTC		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTC

; G:\ELE\@BASIC\TAP_V60.PBP	00058	    TAIL        = 1
	ICALL?L	L00001
	MOVE?CT	001h, _tail

; G:\ELE\@BASIC\TAP_V60.PBP	00059	    TBP         = 1                    
	ICALL?L	L00001
	MOVE?CT	001h, _tbp

; G:\ELE\@BASIC\TAP_V60.PBP	00060	    TIEMPO      = 65534    
	ICALL?L	L00001
	MOVE?CW	0FFFEh, _TIEMPO

; G:\ELE\@BASIC\TAP_V60.PBP	00061	    BUCLE_PR    = 19
	ICALL?L	L00001
	MOVE?CB	013h, _BUCLE_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00062	    VALOR_PR    = 65530
	ICALL?L	L00001
	MOVE?CW	0FFFAh, _VALOR_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00063	    DIVISION    = 0
	ICALL?L	L00001
	MOVE?CW	000h, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00064	    adc_a       = 0
	ICALL?L	L00001
	MOVE?CW	000h, _adc_a

; G:\ELE\@BASIC\TAP_V60.PBP	00065	    adc_l       = 10
	ICALL?L	L00001
	MOVE?CW	00Ah, _adc_l

; G:\ELE\@BASIC\TAP_V60.PBP	00066	    CONTADOR    = 0    
	ICALL?L	L00001
	MOVE?CB	000h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00067	    DUMMY       = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DUMMY

; G:\ELE\@BASIC\TAP_V60.PBP	00068	    CLICKS      = 0    
	ICALL?L	L00001
	MOVE?CB	000h, _CLICKS

; G:\ELE\@BASIC\TAP_V60.PBP	00069	    DESBORDE    = 0	                           
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V60.PBP	00070	    TMR1H       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V60.PBP	00071	    TMR1L       = 0                                                                                                         
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V60.PBP	00072	    T1CON.0     = 0	    
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELE\@BASIC\TAP_V60.PBP	00074	main:

	LABEL?L	_main	

; G:\ELE\@BASIC\TAP_V60.PBP	00076	    IF TBP_SW = 0 THEN
	ICALL?L	L00001
	CMPNE?TCL	_tbp_sw, 000h, L00002

; G:\ELE\@BASIC\TAP_V60.PBP	00077	AR_TBP: IF TBP_SW = 0 THEN AR_TBP	    		

	LABEL?L	_AR_TBP	

; G:\ELE\@BASIC\TAP_V60.PBP	00077	AR_TBP: IF TBP_SW = 0 THEN AR_TBP	    		
	ICALL?L	L00001
	CMPEQ?TCL	_tbp_sw, 000h, _AR_TBP

; G:\ELE\@BASIC\TAP_V60.PBP	00078	  		TOGGLE TBP
	ICALL?L	L00001
	TOGGLE?T	_tbp

; G:\ELE\@BASIC\TAP_V60.PBP	00079	        toggle tail 
	ICALL?L	L00001
	TOGGLE?T	_tail

; G:\ELE\@BASIC\TAP_V60.PBP	00080	        LED_TBP = NOT TBP                 				    		             					                                     
	ICALL?L	L00001
	LNOT?TT	_tbp, _led_tbp

; G:\ELE\@BASIC\TAP_V60.PBP	00081		ENDIF
	ICALL?L	L00001
	LABEL?L	L00002	

; G:\ELE\@BASIC\TAP_V60.PBP	00083	    IF CLICKS = 0 AND TBP = 0 THEN 
	ICALL?L	L00001
	CMPEQ?BCB	_CLICKS, 000h, T1
	CMPEQ?TCB	_tbp, 000h, T2
	LAND?BBW	T1, T2, T2
	CMPF?WL	T2, L00004

; G:\ELE\@BASIC\TAP_V60.PBP	00084	        ADRESH      = 0
	ICALL?L	L00001
	MOVE?CB	000h, ADRESH

; G:\ELE\@BASIC\TAP_V60.PBP	00085	        ADRESL      = 0                
	ICALL?L	L00001
	MOVE?CB	000h, ADRESL

; G:\ELE\@BASIC\TAP_V60.PBP	00086	        ADCON0.1    = 1   
	ICALL?L	L00001
	MOVE?CT	001h, _ADCON0??1

; G:\ELE\@BASIC\TAP_V60.PBP	00087	LEC:    if PIR1.6 = 0 then LEC

	LABEL?L	_LEC	

; G:\ELE\@BASIC\TAP_V60.PBP	00087	LEC:    if PIR1.6 = 0 then LEC
	ICALL?L	L00001
	CMPEQ?TCL	_PIR1??6, 000h, _LEC

; G:\ELE\@BASIC\TAP_V60.PBP	00088	        PIR1.6 = 0                
	ICALL?L	L00001
	MOVE?CT	000h, _PIR1??6

; G:\ELE\@BASIC\TAP_V60.PBP	00090	        adc_a = ADRESH * 255 
	ICALL?L	L00001
	MUL?BCW	ADRESH, 0FFh, _adc_a

; G:\ELE\@BASIC\TAP_V60.PBP	00091	        adc_a = adc_a + ADRESL        
	ICALL?L	L00001
	ADD?WBW	_adc_a, ADRESL, _adc_a

; G:\ELE\@BASIC\TAP_V60.PBP	00093	        if (adc_a < adc_l - 5) or (adc_a > adc_l + 5) then
	ICALL?L	L00001
	SUB?WCW	_adc_l, 005h, T1
	CMPLT?WWB	_adc_a, T1, T1
	ADD?WCW	_adc_l, 005h, T2
	CMPGT?WWB	_adc_a, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00006

; G:\ELE\@BASIC\TAP_V60.PBP	00094	            adc_l = adc_a        
	ICALL?L	L00001
	MOVE?WW	_adc_a, _adc_l

; G:\ELE\@BASIC\TAP_V60.PBP	00095	            delay = adc_a / 4                              
	ICALL?L	L00001
	DIV?WCB	_adc_a, 004h, _delay

; G:\ELE\@BASIC\TAP_V60.PBP	00096	            HPWM 1,delay,8000
	ICALL?L	L00001
	HPWM?CBC	001h, _delay, 01F40h

; G:\ELE\@BASIC\TAP_V60.PBP	00097	        endif
	ICALL?L	L00001
	LABEL?L	L00006	

; G:\ELE\@BASIC\TAP_V60.PBP	00098	    ENDIF 	
	ICALL?L	L00001
	LABEL?L	L00004	

; G:\ELE\@BASIC\TAP_V60.PBP	00100	    goto main
	ICALL?L	L00001
	GOTO?L	_main

; G:\ELE\@BASIC\TAP_V60.PBP	00103	    if TAP_SW = 0 then
	ICALL?L	L00001
	CMPNE?TCL	_tap_sw, 000h, L00008

; G:\ELE\@BASIC\TAP_V60.PBP	00104			CONTADOR = 0    
	ICALL?L	L00001
	MOVE?CB	000h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00105	AR_TAP:	PAUSE 100

	LABEL?L	_AR_TAP	

; G:\ELE\@BASIC\TAP_V60.PBP	00105	AR_TAP:	PAUSE 100
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\TAP_V60.PBP	00106	        CONTADOR = CONTADOR + 1
	ICALL?L	L00001
	ADD?BCB	_contador, 001h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00107	        IF CONTADOR => 10 THEN
	ICALL?L	L00001
	CMPLT?BCL	_contador, 00Ah, L00010

; G:\ELE\@BASIC\TAP_V60.PBP	00108	       	    lED_TAP	    = 1
	ICALL?L	L00001
	MOVE?CT	001h, _led_tap

; G:\ELE\@BASIC\TAP_V60.PBP	00109	            GOSUB ANALOGICA
	ICALL?L	L00001
	GOSUB?L	_ANALOGICA

; G:\ELE\@BASIC\TAP_V60.PBP	00112	                select case dummy
	ICALL?L	L00001

; G:\ELE\@BASIC\TAP_V60.PBP	00113	                    case is < 210       
	ICALL?L	L00001
	CMPGE?BCL	_DUMMY, 0D2h, L00014

; G:\ELE\@BASIC\TAP_V60.PBP	00114	            	       DIVISION = (TIEMPO / 3)                                   
	ICALL?L	L00001
	DIV?WCW	_TIEMPO, 003h, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00115	                    case is < 600
	ICALL?L	L00001
	GOTO?L	L00013
	LABEL?L	L00014	
	CMPGE?BCL	_DUMMY, 00258h, L00015

; G:\ELE\@BASIC\TAP_V60.PBP	00116	            	       DIVISION = (TIEMPO / 2)
	ICALL?L	L00001
	DIV?WCW	_TIEMPO, 002h, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00117	               	    case is < 925
	ICALL?L	L00001
	GOTO?L	L00013
	LABEL?L	L00015	
	CMPGE?BCL	_DUMMY, 0039Dh, L00016

; G:\ELE\@BASIC\TAP_V60.PBP	00118	             	       DIVISION = (TIEMPO / 3) * 2      
	ICALL?L	L00001
	DIV?WCW	_TIEMPO, 003h, T1
	MUL?WCW	T1, 002h, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00119	               	    case is < 980
	ICALL?L	L00001
	GOTO?L	L00013
	LABEL?L	L00016	
	CMPGE?BCL	_DUMMY, 003D4h, L00017

; G:\ELE\@BASIC\TAP_V60.PBP	00120	             	       DIVISION = (TIEMPO / 4) * 3       
	ICALL?L	L00001
	DIV?WCW	_TIEMPO, 004h, T1
	MUL?WCW	T1, 003h, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00121	               	    case is => 980
	ICALL?L	L00001
	GOTO?L	L00013
	LABEL?L	L00017	
	CMPLT?BCL	_DUMMY, 003D4h, L00018

; G:\ELE\@BASIC\TAP_V60.PBP	00122	             	       DIVISION = TIEMPO              
	ICALL?L	L00001
	MOVE?WW	_TIEMPO, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00123	                end select
	ICALL?L	L00001
	LABEL?L	L00018	
	LABEL?L	L00013	

; G:\ELE\@BASIC\TAP_V60.PBP	00125	            gosub RANGO
	ICALL?L	L00001
	GOSUB?L	_RANGO

; G:\ELE\@BASIC\TAP_V60.PBP	00126	        endif
	ICALL?L	L00001
	LABEL?L	L00010	

; G:\ELE\@BASIC\TAP_V60.PBP	00127			IF tap_sw = 0 THEN AR_TAP
	ICALL?L	L00001
	CMPEQ?TCL	_tap_sw, 000h, _AR_TAP

; G:\ELE\@BASIC\TAP_V60.PBP	00129	        IF (CONTADOR => 10) THEN                        
	ICALL?L	L00001
	CMPLT?BCL	_contador, 00Ah, L00019

; G:\ELE\@BASIC\TAP_V60.PBP	00130	            TMR1H       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V60.PBP	00131	            TMR1L       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V60.PBP	00132	            DESBORDE    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V60.PBP	00133	            T1CON.0		= 1
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELE\@BASIC\TAP_V60.PBP	00134	            lED_TAP	    = 0        
	ICALL?L	L00001
	MOVE?CT	000h, _led_tap

; G:\ELE\@BASIC\TAP_V60.PBP	00135	        endif
	ICALL?L	L00001
	LABEL?L	L00019	

; G:\ELE\@BASIC\TAP_V60.PBP	00137	        IF (CONTADOR < 10) THEN 
	ICALL?L	L00001
	CMPGE?BCL	_contador, 00Ah, L00021

; G:\ELE\@BASIC\TAP_V60.PBP	00138	            gosub CRONOMETRAR
	ICALL?L	L00001
	GOSUB?L	_CRONOMETRAR

; G:\ELE\@BASIC\TAP_V60.PBP	00139	            gosub RANGO
	ICALL?L	L00001
	GOSUB?L	_RANGO

; G:\ELE\@BASIC\TAP_V60.PBP	00140	            pulsout LED_TAP,200
	ICALL?L	L00001
	PULSOUT?TC	_led_tap, 0C8h

; G:\ELE\@BASIC\TAP_V60.PBP	00141	        ENDIF
	ICALL?L	L00001
	LABEL?L	L00021	

; G:\ELE\@BASIC\TAP_V60.PBP	00142			CONTADOR = 0                
	ICALL?L	L00001
	MOVE?CB	000h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00143	    endif       															
	ICALL?L	L00001
	LABEL?L	L00008	

; G:\ELE\@BASIC\TAP_V60.PBP	00148	analogica:

	LABEL?L	_ANALOGICA	

; G:\ELE\@BASIC\TAP_V60.PBP	00149	return
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\TAP_V60.PBP	00151	CRONOMETRAR:        

	LABEL?L	_CRONOMETRAR	

; G:\ELE\@BASIC\TAP_V60.PBP	00152	    T1CON.0 = 0        
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELE\@BASIC\TAP_V60.PBP	00153	    IF CLICKS = 0 THEN	                                   
	ICALL?L	L00001
	CMPNE?BCL	_CLICKS, 000h, L00023

; G:\ELE\@BASIC\TAP_V60.PBP	00154	    	TMR1H       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V60.PBP	00155	    	TMR1L       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V60.PBP	00156	    	DESBORDE    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V60.PBP	00157	    	T1CON.0		= 1
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELE\@BASIC\TAP_V60.PBP	00158			DUMMY.1 	= 1
	ICALL?L	L00001
	MOVE?CT	001h, _DUMMY??1

; G:\ELE\@BASIC\TAP_V60.PBP	00159			CONTADOR	= 0            
	ICALL?L	L00001
	MOVE?CB	000h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00160			for CONTADOR = 0 to 10 
	ICALL?L	L00001
	MOVE?CB	000h, _contador
	LABEL?L	L00025	
	CMPGT?BCL	_contador, 00Ah, L00026

; G:\ELE\@BASIC\TAP_V60.PBP	00161				VALOR[CONTADOR] = 0
	ICALL?L	L00001
	AIN?CWB	000h, _VALOR, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00162				BUCLE[CONTADOR] = 0            	
	ICALL?L	L00001
	AIN?CBB	000h, _BUCLE, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00163			next				                                                                                                                                                                                         
	ICALL?L	L00001
	NEXT?BCL	_contador, 001h, L00025
	LABEL?L	L00026	

; G:\ELE\@BASIC\TAP_V60.PBP	00164	    ENDIF
	ICALL?L	L00001
	LABEL?L	L00023	

; G:\ELE\@BASIC\TAP_V60.PBP	00165		IF CLICKS => 1 then    
	ICALL?L	L00001
	CMPLT?BCL	_CLICKS, 001h, L00027

; G:\ELE\@BASIC\TAP_V60.PBP	00166			VALOR.BYTE0[CLICKS-1]	= TMR1L
	ICALL?L	L00001
	SUB?BCW	_CLICKS, 001h, T1
	AIN?BBW	TMR1L, _VALOR??BYTE0, T1

; G:\ELE\@BASIC\TAP_V60.PBP	00167	     	VALOR.BYTE1[CLICKS-1]	= TMR1H                
	ICALL?L	L00001
	SUB?BCW	_CLICKS, 001h, T1
	AIN?BBW	TMR1H, _VALOR??BYTE1, T1

; G:\ELE\@BASIC\TAP_V60.PBP	00168	      	BUCLE[CLICKS-1]			= DESBORDE              		    	
	ICALL?L	L00001
	SUB?BCW	_CLICKS, 001h, T1
	AIN?BBW	_DESBORDE, _BUCLE, T1

; G:\ELE\@BASIC\TAP_V60.PBP	00169			TIEMPO		= 0
	ICALL?L	L00001
	MOVE?CW	000h, _TIEMPO

; G:\ELE\@BASIC\TAP_V60.PBP	00170			division	= 0
	ICALL?L	L00001
	MOVE?CW	000h, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00171		 	VALOR_PR    = 0            
	ICALL?L	L00001
	MOVE?CW	000h, _VALOR_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00172		 	BUCLE_PR    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _BUCLE_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00173			CONTADOR	= 1 	
	ICALL?L	L00001
	MOVE?CB	001h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00174			FOR CONTADOR = 1 TO CLICKS
	ICALL?L	L00001
	MOVE?CB	001h, _contador
	LABEL?L	L00029	
	CMPGT?BBL	_contador, _CLICKS, L00030

; G:\ELE\@BASIC\TAP_V60.PBP	00175		    	tiempo = TIEMPO + (VALOR.BYTE0[CONTADOR-1])                 
	ICALL?L	L00001
	SUB?BCW	_contador, 001h, T1
	AOUT?BWB	_VALOR??BYTE0, T1, T1
	ADD?WBW	_TIEMPO, T1, _TIEMPO

; G:\ELE\@BASIC\TAP_V60.PBP	00176		    	division = division + (VALOR.BYTE1[CONTADOR-1]) 
	ICALL?L	L00001
	SUB?BCW	_contador, 001h, T1
	AOUT?BWB	_VALOR??BYTE1, T1, T1
	ADD?WBW	_DIVISION, T1, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00177		    	BUCLE_PR = (BUCLE_PR + BUCLE[CONTADOR-1])			 			            
	ICALL?L	L00001
	SUB?BCW	_contador, 001h, T1
	AOUT?BWB	_BUCLE, T1, T1
	ADD?BBB	_BUCLE_PR, T1, _BUCLE_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00178			NEXT		
	ICALL?L	L00001
	NEXT?BCL	_contador, 001h, L00029
	LABEL?L	L00030	

; G:\ELE\@BASIC\TAP_V60.PBP	00179			valor_pr.BYTE0  = tiempo / CLICKS
	ICALL?L	L00001
	DIV?WBB	_TIEMPO, _CLICKS, _VALOR_PR??BYTE0

; G:\ELE\@BASIC\TAP_V60.PBP	00180			valor_pr.BYTE1  = DIVISION / CLICKS
	ICALL?L	L00001
	DIV?WBB	_DIVISION, _CLICKS, _VALOR_PR??BYTE1

; G:\ELE\@BASIC\TAP_V60.PBP	00181			BUCLE_PR = BUCLE_PR / CLICKS											                                                                                                                                                                              
	ICALL?L	L00001
	DIV?BBB	_BUCLE_PR, _CLICKS, _BUCLE_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00182		 	if bucle_PR => 20 then 
	ICALL?L	L00001
	CMPLT?BCL	_BUCLE_PR, 014h, L00031

; G:\ELE\@BASIC\TAP_V60.PBP	00183		  		bucle_PR    = 19
	ICALL?L	L00001
	MOVE?CB	013h, _BUCLE_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00184		    	VALOR_PR    = 65530               
	ICALL?L	L00001
	MOVE?CW	0FFFAh, _VALOR_PR

; G:\ELE\@BASIC\TAP_V60.PBP	00185			ENDIF
	ICALL?L	L00001
	LABEL?L	L00031	

; G:\ELE\@BASIC\TAP_V60.PBP	00186			TMR1H		= 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V60.PBP	00187			TMR1L		= 0            
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V60.PBP	00188			DESBORDE	= 0                		
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V60.PBP	00189			T1CON.0		= 1
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELE\@BASIC\TAP_V60.PBP	00190			DUMMY.1		= 1						                               
	ICALL?L	L00001
	MOVE?CT	001h, _DUMMY??1

; G:\ELE\@BASIC\TAP_V60.PBP	00191			TIEMPO      = 3276 * BUCLE_PR
	ICALL?L	L00001
	MUL?CBW	00CCCh, _BUCLE_PR, _TIEMPO

; G:\ELE\@BASIC\TAP_V60.PBP	00192			TIEMPO      = TIEMPO + (VALOR_PR / 20)		
	ICALL?L	L00001
	DIV?WCW	_VALOR_PR, 014h, T1
	ADD?WWW	_TIEMPO, T1, _TIEMPO

; G:\ELE\@BASIC\TAP_V60.PBP	00193			DIVISION = TIEMPO        							
	ICALL?L	L00001
	MOVE?WW	_TIEMPO, _DIVISION

; G:\ELE\@BASIC\TAP_V60.PBP	00194		ENDIF	 
	ICALL?L	L00001
	LABEL?L	L00027	

; G:\ELE\@BASIC\TAP_V60.PBP	00195		CLICKS = CLICKS + 1
	ICALL?L	L00001
	ADD?BCB	_CLICKS, 001h, _CLICKS

; G:\ELE\@BASIC\TAP_V60.PBP	00196		IF CLICKS = 11 THEN CLICKS = 0				                                                                                                                                                            		                
	ICALL?L	L00001
	CMPNE?BCL	_CLICKS, 00Bh, L00033
	MOVE?CB	000h, _CLICKS
	LABEL?L	L00033	

; G:\ELE\@BASIC\TAP_V60.PBP	00197	return
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\TAP_V60.PBP	00199	RANGO:

	LABEL?L	_RANGO	

; G:\ELE\@BASIC\TAP_V60.PBP	00201		HPWM 1,DELAY,255									
	ICALL?L	L00001
	HPWM?CBC	001h, _delay, 0FFh

; G:\ELE\@BASIC\TAP_V60.PBP	00202	RETURN                        
	ICALL?L	L00001
	RETURN?	

; G:\ELE\@BASIC\TAP_V60.PBP	00204	disable    
	DISABLE?	

; G:\ELE\@BASIC\TAP_V60.PBP	00205	INTERRUPCION:

	LABEL?L	_interrupcion	

; G:\ELE\@BASIC\TAP_V60.PBP	00206	    contador = contador + 1
	ADD?BCB	_contador, 001h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00207	    if contador = 168 then 
	CMPNE?BCL	_contador, 0A8h, L00035

; G:\ELE\@BASIC\TAP_V60.PBP	00208	        pulsout LED_TAP,100
	PULSOUT?TC	_led_tap, 064h

; G:\ELE\@BASIC\TAP_V60.PBP	00209	        contador = 0
	MOVE?CB	000h, _contador

; G:\ELE\@BASIC\TAP_V60.PBP	00210	    endif                                                     				             								 														                                                                                               
	LABEL?L	L00035	

; G:\ELE\@BASIC\TAP_V60.PBP	00211	    INTCON.2 = 0 ; FLAG TMR0				                                                            
	MOVE?CT	000h, _INTCON??2

; G:\ELE\@BASIC\TAP_V60.PBP	00212	RESUME
	RESUME?	

; G:\ELE\@BASIC\TAP_V60.PBP	00213	ENABLE          
	ENABLE?	

; G:\ELE\@BASIC\TAP_V60.PBP	00215	END
	ICALL?L	L00001
	END?	

	END
