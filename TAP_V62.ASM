
; PICBASIC PRO(TM) Compiler 2.60C, (c) 1998, 2011 microEngineering Labs, Inc. All Rights Reserved. 
_USED			EQU	1

	INCLUDE	"C:\PBP\16F886.INC"


; Define statements.
; C:\PBP\16F886.BAS        	00018	DEFINE  CODE_SIZE 8
#define		CODE_SIZE		 8
; G:\ELE\@BASIC\TAP_V62.PBP	00034	DEFINE  LCD_DREG    PORTC
#define		LCD_DREG		    PORTC
; G:\ELE\@BASIC\TAP_V62.PBP	00035	DEFINE  LCD_DBIT    4
#define		LCD_DBIT		    4
; G:\ELE\@BASIC\TAP_V62.PBP	00036	DEFINE  LCD_RSREG   PORTC
#define		LCD_RSREG		   PORTC
; G:\ELE\@BASIC\TAP_V62.PBP	00037	DEFINE  LCD_RSBIT   0
#define		LCD_RSBIT		   0
; G:\ELE\@BASIC\TAP_V62.PBP	00038	DEFINE  LCD_EREG    PORTC
#define		LCD_EREG		    PORTC
; G:\ELE\@BASIC\TAP_V62.PBP	00039	DEFINE  LCD_EBIT    1
#define		LCD_EBIT		    1
; G:\ELE\@BASIC\TAP_V62.PBP	00040	DEFINE  LCD_BITS    4
#define		LCD_BITS		    4
; G:\ELE\@BASIC\TAP_V62.PBP	00041	DEFINE  LCD_LINES   2
#define		LCD_LINES		   2

RAM_START       		EQU	00020h
RAM_END         		EQU	001EFh
RAM_BANKS       		EQU	00004h
BANK0_START     		EQU	00020h
BANK0_END       		EQU	0007Fh
BANK1_START     		EQU	000A0h
BANK1_END       		EQU	000EFh
BANK2_START     		EQU	00110h
BANK2_END       		EQU	0016Fh
BANK3_START     		EQU	00190h
BANK3_END       		EQU	001EFh
EEPROM_START    		EQU	02100h
EEPROM_END      		EQU	021FFh

; C:\PBP\PBPPIC14.RAM      	00012	A00020	R0      VAR     WORD BANK0 SYSTEM       ' System Register
R0              		EQU	RAM_START + 000h
; C:\PBP\PBPPIC14.RAM      	00013	A00022	R1      VAR     WORD BANK0 SYSTEM       ' System Register
R1              		EQU	RAM_START + 002h
; C:\PBP\PBPPIC14.RAM      	00014	A00024	R2      VAR     WORD BANK0 SYSTEM       ' System Register
R2              		EQU	RAM_START + 004h
; C:\PBP\PBPPIC14.RAM      	00015	A00026	R3      VAR     WORD BANK0 SYSTEM       ' System Register
R3              		EQU	RAM_START + 006h
; C:\PBP\PBPPIC14.RAM      	00016	A00028	R4      VAR     WORD BANK0 SYSTEM       ' System Register
R4              		EQU	RAM_START + 008h
; C:\PBP\PBPPIC14.RAM      	00017	A0002A	R5      VAR     WORD BANK0 SYSTEM       ' System Register
R5              		EQU	RAM_START + 00Ah
; C:\PBP\PBPPIC14.RAM      	00018	A0002C	R6      VAR     WORD BANK0 SYSTEM       ' System Register
R6              		EQU	RAM_START + 00Ch
; C:\PBP\PBPPIC14.RAM      	00019	A0002E	R7      VAR     WORD BANK0 SYSTEM       ' System Register
R7              		EQU	RAM_START + 00Eh
; C:\PBP\PBPPIC14.RAM      	00020	A00030	R8      VAR     WORD BANK0 SYSTEM       ' System Register
R8              		EQU	RAM_START + 010h
; C:\PBP\PBPPIC14.RAM      	00026	A00032	FLAGS   VAR     BYTE BANK0 SYSTEM       ' Static flags
FLAGS           		EQU	RAM_START + 012h
; C:\PBP\PBPPIC14.RAM      	00025	A00033	GOP     VAR     BYTE BANK0 SYSTEM       ' Gen Op Parameter
GOP             		EQU	RAM_START + 013h
; C:\PBP\PBPPIC14.RAM      	00022	A00034	RM1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Mask
RM1             		EQU	RAM_START + 014h
; C:\PBP\PBPPIC14.RAM      	00024	A00035	RM2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Mask
RM2             		EQU	RAM_START + 015h
; C:\PBP\PBPPIC14.RAM      	00021	A00036	RR1     VAR     BYTE BANK0 SYSTEM       ' Pin 1 Register
RR1             		EQU	RAM_START + 016h
; C:\PBP\PBPPIC14.RAM      	00023	A00037	RR2     VAR     BYTE BANK0 SYSTEM       ' Pin 2 Register
RR2             		EQU	RAM_START + 017h
; G:\ELE\@BASIC\TAP_V62.PBP	00051	A00038	VALOR       VAR WORD[10]
_VALOR           		EQU	RAM_START + 018h
; G:\ELE\@BASIC\TAP_V62.PBP	00052	A0004C	BUCLE       VAR BYTE[10]
_BUCLE           		EQU	RAM_START + 02Ch
; G:\ELE\@BASIC\TAP_V62.PBP	00049	A00056	ADC_A       VAR WORD
_ADC_A           		EQU	RAM_START + 036h
; G:\ELE\@BASIC\TAP_V62.PBP	00050	A00058	ADC_L       VAR WORD
_ADC_L           		EQU	RAM_START + 038h
; G:\ELE\@BASIC\TAP_V62.PBP	00059	A0005A	AUX_1       VAR WORD
_AUX_1           		EQU	RAM_START + 03Ah
; G:\ELE\@BASIC\TAP_V62.PBP	00060	A0005C	AUX_2       VAR WORD
_AUX_2           		EQU	RAM_START + 03Ch
; G:\ELE\@BASIC\TAP_V62.PBP	00001	A0005E	@ __CONFIG _CONFIG1, 0x23C4
T1              		EQU	RAM_START + 03Eh
; G:\ELE\@BASIC\TAP_V62.PBP	00001	A00060	@ __CONFIG _CONFIG1, 0x23C4
T2              		EQU	RAM_START + 040h
; G:\ELE\@BASIC\TAP_V62.PBP	00001	A00062	@ __CONFIG _CONFIG1, 0x23C4
T3              		EQU	RAM_START + 042h
; G:\ELE\@BASIC\TAP_V62.PBP	00001	A00064	@ __CONFIG _CONFIG1, 0x23C4
T4              		EQU	RAM_START + 044h
; G:\ELE\@BASIC\TAP_V62.PBP	00068	A00066	TIEMPO_CLK  VAR WORD
_TIEMPO_CLK      		EQU	RAM_START + 046h
; G:\ELE\@BASIC\TAP_V62.PBP	00067	A00068	TIEMPO_TAP  VAR WORD
_TIEMPO_TAP      		EQU	RAM_START + 048h
; G:\ELE\@BASIC\TAP_V62.PBP	00069	A0006A	TIMER1      VAR WORD
_TIMER1          		EQU	RAM_START + 04Ah
; G:\ELE\@BASIC\TAP_V62.PBP	00053	A0006C	VALOR_P     VAR WORD
_VALOR_P         		EQU	RAM_START + 04Ch
; G:\ELE\@BASIC\TAP_V62.PBP	00061	A0006E	AUX_3       VAR BYTE
_AUX_3           		EQU	RAM_START + 04Eh
; G:\ELE\@BASIC\TAP_V62.PBP	00054	A0006F	BUCLE_P     VAR BYTE
_BUCLE_P         		EQU	RAM_START + 04Fh
; G:\ELE\@BASIC\TAP_V62.PBP	00058	A00070	CLICKS      VAR BYTE
_CLICKS          		EQU	RAM_START + 050h
; G:\ELE\@BASIC\TAP_V62.PBP	00071	A00071	cont_act    var byte
_cont_act        		EQU	RAM_START + 051h
; G:\ELE\@BASIC\TAP_V62.PBP	00062	A00072	CONT_ATR    VAR BYTE
_CONT_ATR        		EQU	RAM_START + 052h
; G:\ELE\@BASIC\TAP_V62.PBP	00056	A00073	CONT_TAP    VAR BYTE
_CONT_TAP        		EQU	RAM_START + 053h
; G:\ELE\@BASIC\TAP_V62.PBP	00055	A00074	CONTADOR    VAR BYTE
_CONTADOR        		EQU	RAM_START + 054h
; G:\ELE\@BASIC\TAP_V62.PBP	00057	A00075	DELAY       VAR BYTE
_DELAY           		EQU	RAM_START + 055h
; G:\ELE\@BASIC\TAP_V62.PBP	00064	A00076	DESBORDE    VAR BYTE
_DESBORDE        		EQU	RAM_START + 056h
; G:\ELE\@BASIC\TAP_V62.PBP	00001	A00077	@ __CONFIG _CONFIG1, 0x23C4
PB01            		EQU	RAM_START + 057h
; C:\PBP\16F886.BAS        	00022	PORTL   VAR     PORTB
_PORTL           		EQU	 PORTB
; C:\PBP\16F886.BAS        	00023	PORTH   VAR     PORTC
_PORTH           		EQU	 PORTC
; C:\PBP\16F886.BAS        	00024	TRISL   VAR     TRISB
_TRISL           		EQU	 TRISB
; C:\PBP\16F886.BAS        	00025	TRISH   VAR     TRISC
_TRISH           		EQU	 TRISC
_VALOR??BYTE0    		EQU	_VALOR
_VALOR??BYTE1    		EQU	_VALOR + 001h
_VALOR_P??BYTE0  		EQU	_VALOR_P
_VALOR_P??BYTE1  		EQU	_VALOR_P + 001h
_TIMER1??BYTE0   		EQU	_TIMER1
_TIMER1??BYTE1   		EQU	_TIMER1 + 001h
#define _TBP_SW          	_PORTB??0
#define _TAP_SW          	_PORTB??1
#define _TAIL            	_PORTB??2
#define _TBP             	_PORTB??3
#define _LED_TAP         	_PORTA??7
#define _TAIL_ACT        	 PB01, 002h
#define _DIVI_ACT        	 PB01, 001h
#define _CORREGIR        	 PB01, 000h
#define _PORTB??0        	 PORTB, 000h
#define _PORTB??1        	 PORTB, 001h
#define _PORTB??2        	 PORTB, 002h
#define _PORTB??3        	 PORTB, 003h
#define _PORTA??7        	 PORTA, 007h
#define _T1CON??0        	 T1CON, 000h
#define _INTCON??5       	 INTCON, 005h
#define _ADCON0??1       	 ADCON0, 001h
#define _PIR1??6         	 PIR1, 006h
#define _INTCON??2       	 INTCON, 002h
#define _PIR1??0         	 PIR1, 000h
	INCLUDE	"TAP_V62.MAC"
	INCLUDE	"C:\PBP\PBPPIC14.LIB"


; C:\PBP\16F886.BAS        	00012	BANK0   $0020, $007F
; C:\PBP\16F886.BAS        	00013	BANK1   $00A0, $00EF
; C:\PBP\16F886.BAS        	00014	BANK2   $0110, $016F
; C:\PBP\16F886.BAS        	00015	BANK3   $0190, $01EF
; C:\PBP\16F886.BAS        	00016	EEPROM  $2100, $21FF
; C:\PBP\16F886.BAS        	00017	LIBRARY "PBPPIC14"
; C:\PBP\16F886.BAS        	00018	DEFINE  CODE_SIZE 8

; C:\PBP\16F886.BAS        	00020	        include "PIC14EXT.BAS"

; C:\PBP\16F886.BAS        	00027	        include "PBPPIC14.RAM"

; C:\PBP\16F886.BAS        	00029		ADCON0 = $c0	' Start off with RC
	MOVE?CB	0C0h, ADCON0

; G:\ELE\@BASIC\TAP_V62.PBP	00001	@ __CONFIG _CONFIG1, 0x23C4

	ASM?
 __CONFIG _CONFIG1, 0x23C4

	ENDASM?


; G:\ELE\@BASIC\TAP_V62.PBP	00002	@ __CONFIG _CONFIG2, 0x0700          

	ASM?
 __CONFIG _CONFIG2, 0x0700          

	ENDASM?


; G:\ELE\@BASIC\TAP_V62.PBP	00004	OSCCON      = %01110111 
	MOVE?CB	077h, OSCCON

; G:\ELE\@BASIC\TAP_V62.PBP	00005	TRISA       = %00010001
	MOVE?CB	011h, TRISA

; G:\ELE\@BASIC\TAP_V62.PBP	00006	TRISB       = %00000011
	MOVE?CB	003h, TRISB

; G:\ELE\@BASIC\TAP_V62.PBP	00007	TRISC       = %00000000
	MOVE?CB	000h, TRISC

; G:\ELE\@BASIC\TAP_V62.PBP	00008	WPUB        = %00000000                 
	MOVE?CB	000h, WPUB

; G:\ELE\@BASIC\TAP_V62.PBP	00009	OPTION_REG  = %10100011
	MOVE?CB	0A3h, OPTION_REG

; G:\ELE\@BASIC\TAP_V62.PBP	00010	INTCON      = %11100000		
	MOVE?CB	0E0h, INTCON

; G:\ELE\@BASIC\TAP_V62.PBP	00011	IOCB        = %00000000		
	MOVE?CB	000h, IOCB

; G:\ELE\@BASIC\TAP_V62.PBP	00012	PIE1        = %00000001             
	MOVE?CB	001h, PIE1

; G:\ELE\@BASIC\TAP_V62.PBP	00013	PIE2        = %00000000		
	MOVE?CB	000h, PIE2

; G:\ELE\@BASIC\TAP_V62.PBP	00014	PIR1        = %00000000
	MOVE?CB	000h, PIR1

; G:\ELE\@BASIC\TAP_V62.PBP	00015	PIR2        = %00000000
	MOVE?CB	000h, PIR2

; G:\ELE\@BASIC\TAP_V62.PBP	00016	ANSEL       = %00000001
	MOVE?CB	001h, ANSEL

; G:\ELE\@BASIC\TAP_V62.PBP	00017	ANSELH      = %00000000
	MOVE?CB	000h, ANSELH

; G:\ELE\@BASIC\TAP_V62.PBP	00018	ADCON0      = %11000001
	MOVE?CB	0C1h, ADCON0

; G:\ELE\@BASIC\TAP_V62.PBP	00019	ADCON1      = %10000000
	MOVE?CB	080h, ADCON1

; G:\ELE\@BASIC\TAP_V62.PBP	00020	CM1CON0     = %00000000		
	MOVE?CB	000h, CM1CON0

; G:\ELE\@BASIC\TAP_V62.PBP	00021	CM2CON0     = %00000000
	MOVE?CB	000h, CM2CON0

; G:\ELE\@BASIC\TAP_V62.PBP	00022	CM2CON1     = %00000000
	MOVE?CB	000h, CM2CON1

; G:\ELE\@BASIC\TAP_V62.PBP	00023	VRCON		= %00000000		
	MOVE?CB	000h, VRCON

; G:\ELE\@BASIC\TAP_V62.PBP	00024	SRCON       = %00000000
	MOVE?CB	000h, SRCON

; G:\ELE\@BASIC\TAP_V62.PBP	00025	T1CON       = %00000000
	MOVE?CB	000h, T1CON

; G:\ELE\@BASIC\TAP_V62.PBP	00026	CCP1CON     = %00001100
	MOVE?CB	00Ch, CCP1CON

; G:\ELE\@BASIC\TAP_V62.PBP	00027	CCP2CON     = %00000000
	MOVE?CB	000h, CCP2CON

; G:\ELE\@BASIC\TAP_V62.PBP	00028	ECCPAS      = %00000000
	MOVE?CB	000h, ECCPAS

; G:\ELE\@BASIC\TAP_V62.PBP	00029	PSTRCON     = %00000001
	MOVE?CB	001h, PSTRCON

; G:\ELE\@BASIC\TAP_V62.PBP	00030	SSPCON      = %00000101
	MOVE?CB	005h, SSPCON

; G:\ELE\@BASIC\TAP_V62.PBP	00032	on interrupt goto interrupcion
	ONINT?LL	_interrupcion, L00001
; G:\ELE\@BASIC\TAP_V62.PBP	00034	DEFINE  LCD_DREG    PORTC
; G:\ELE\@BASIC\TAP_V62.PBP	00035	DEFINE  LCD_DBIT    4
; G:\ELE\@BASIC\TAP_V62.PBP	00036	DEFINE  LCD_RSREG   PORTC
; G:\ELE\@BASIC\TAP_V62.PBP	00037	DEFINE  LCD_RSBIT   0
; G:\ELE\@BASIC\TAP_V62.PBP	00038	DEFINE  LCD_EREG    PORTC
; G:\ELE\@BASIC\TAP_V62.PBP	00039	DEFINE  LCD_EBIT    1
; G:\ELE\@BASIC\TAP_V62.PBP	00040	DEFINE  LCD_BITS    4
; G:\ELE\@BASIC\TAP_V62.PBP	00041	DEFINE  LCD_LINES   2

; G:\ELE\@BASIC\TAP_V62.PBP	00073	INICIO:

	LABEL?L	_INICIO	

; G:\ELE\@BASIC\TAP_V62.PBP	00075		PORTA		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTA

; G:\ELE\@BASIC\TAP_V62.PBP	00076		PORTB		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTB

; G:\ELE\@BASIC\TAP_V62.PBP	00077		PORTC		= 0
	ICALL?L	L00001
	MOVE?CB	000h, PORTC

; G:\ELE\@BASIC\TAP_V62.PBP	00078	    TAIL        = 1
	ICALL?L	L00001
	MOVE?CT	001h, _TAIL

; G:\ELE\@BASIC\TAP_V62.PBP	00079	    TBP         = 1                        
	ICALL?L	L00001
	MOVE?CT	001h, _TBP

; G:\ELE\@BASIC\TAP_V62.PBP	00080	    BUCLE_P     = 19
	ICALL?L	L00001
	MOVE?CB	013h, _BUCLE_P

; G:\ELE\@BASIC\TAP_V62.PBP	00081	    VALOR_P     = 65530
	ICALL?L	L00001
	MOVE?CW	0FFFAh, _VALOR_P

; G:\ELE\@BASIC\TAP_V62.PBP	00082	    adc_a       = 0
	ICALL?L	L00001
	MOVE?CW	000h, _ADC_A

; G:\ELE\@BASIC\TAP_V62.PBP	00083	    adc_l       = 100
	ICALL?L	L00001
	MOVE?CW	064h, _ADC_L

; G:\ELE\@BASIC\TAP_V62.PBP	00084	    CONTADOR    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _CONTADOR

; G:\ELE\@BASIC\TAP_V62.PBP	00085	    CLICKS      = 0        	                           
	ICALL?L	L00001
	MOVE?CB	000h, _CLICKS

; G:\ELE\@BASIC\TAP_V62.PBP	00086	    TMR1H       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V62.PBP	00087	    TMR1L       = 0    
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V62.PBP	00088	    DESBORDE    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V62.PBP	00089	    TAIL_ACT    = 0
	ICALL?L	L00001
	MOVE?CT	000h, _TAIL_ACT

; G:\ELE\@BASIC\TAP_V62.PBP	00090	    DIVI_ACT    = 0
	ICALL?L	L00001
	MOVE?CT	000h, _DIVI_ACT

; G:\ELE\@BASIC\TAP_V62.PBP	00091	    CONT_TAP    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _CONT_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00092	    AUX_1       = 0
	ICALL?L	L00001
	MOVE?CW	000h, _AUX_1

; G:\ELE\@BASIC\TAP_V62.PBP	00093	    AUX_2       = 0
	ICALL?L	L00001
	MOVE?CW	000h, _AUX_2

; G:\ELE\@BASIC\TAP_V62.PBP	00094	    AUX_3       = 0
	ICALL?L	L00001
	MOVE?CB	000h, _AUX_3

; G:\ELE\@BASIC\TAP_V62.PBP	00095	    CONT_ATR    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _CONT_ATR

; G:\ELE\@BASIC\TAP_V62.PBP	00096	    TIEMPO_TAP  = 0
	ICALL?L	L00001
	MOVE?CW	000h, _TIEMPO_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00097	    TIEMPO_CLK  = 0
	ICALL?L	L00001
	MOVE?CW	000h, _TIEMPO_CLK

; G:\ELE\@BASIC\TAP_V62.PBP	00098	    TIMER1      = 0
	ICALL?L	L00001
	MOVE?CW	000h, _TIMER1

; G:\ELE\@BASIC\TAP_V62.PBP	00099	    CORREGIR    = 0
	ICALL?L	L00001
	MOVE?CT	000h, _CORREGIR

; G:\ELE\@BASIC\TAP_V62.PBP	00100	    cont_act    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _cont_act

; G:\ELE\@BASIC\TAP_V62.PBP	00101	    delay       = 255    
	ICALL?L	L00001
	MOVE?CB	0FFh, _DELAY

; G:\ELE\@BASIC\TAP_V62.PBP	00103	    HPWM 1,delay,10000
	ICALL?L	L00001
	HPWM?CBC	001h, _DELAY, 02710h

; G:\ELE\@BASIC\TAP_V62.PBP	00104	    PAUSE 500	    
	ICALL?L	L00001
	PAUSE?C	001F4h

; G:\ELE\@BASIC\TAP_V62.PBP	00105	    lcdout $FE,1
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	001h

; G:\ELE\@BASIC\TAP_V62.PBP	00107	MAIN:

	LABEL?L	_MAIN	

; G:\ELE\@BASIC\TAP_V62.PBP	00109	    IF TBP_SW = 1 THEN
	ICALL?L	L00001
	CMPNE?TCL	_TBP_SW, 001h, L00002

; G:\ELE\@BASIC\TAP_V62.PBP	00110	AR_TBP: pause 100

	LABEL?L	_AR_TBP	

; G:\ELE\@BASIC\TAP_V62.PBP	00110	AR_TBP: pause 100
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\TAP_V62.PBP	00111	        CONT_ATR = CONT_ATR + 1
	ICALL?L	L00001
	ADD?BCB	_CONT_ATR, 001h, _CONT_ATR

; G:\ELE\@BASIC\TAP_V62.PBP	00112	        IF TBP_SW = 1 THEN GOTO AR_TBP
	ICALL?L	L00001
	CMPNE?TCL	_TBP_SW, 001h, L00004
	GOTO?L	_AR_TBP
	LABEL?L	L00004	

; G:\ELE\@BASIC\TAP_V62.PBP	00113	        IF CONT_ATR > 10 THEN TOGGLE TAIL_ACT	    		
	ICALL?L	L00001
	CMPLE?BCL	_CONT_ATR, 00Ah, L00006
	TOGGLE?T	_TAIL_ACT
	LABEL?L	L00006	

; G:\ELE\@BASIC\TAP_V62.PBP	00114	        IF CONT_ATR < 10 THEN 
	ICALL?L	L00001
	CMPGE?BCL	_CONT_ATR, 00Ah, L00008

; G:\ELE\@BASIC\TAP_V62.PBP	00115	            TOGGLE TAIL
	ICALL?L	L00001
	TOGGLE?T	_TAIL

; G:\ELE\@BASIC\TAP_V62.PBP	00116	            IF TAIL_ACT = 0 THEN TBP = TAIL
	ICALL?L	L00001
	CMPNE?TCL	_TAIL_ACT, 000h, L00010
	MOVE?TT	_TAIL, _TBP
	LABEL?L	L00010	

; G:\ELE\@BASIC\TAP_V62.PBP	00117	            IF TAIL_ACT = 1 THEN TBP = 0
	ICALL?L	L00001
	CMPNE?TCL	_TAIL_ACT, 001h, L00012
	MOVE?CT	000h, _TBP
	LABEL?L	L00012	

; G:\ELE\@BASIC\TAP_V62.PBP	00118	        ENDIF
	ICALL?L	L00001
	LABEL?L	L00008	

; G:\ELE\@BASIC\TAP_V62.PBP	00119	        CONT_ATR = 0                                         				    		             					                                     
	ICALL?L	L00001
	MOVE?CB	000h, _CONT_ATR

; G:\ELE\@BASIC\TAP_V62.PBP	00120		ENDIF
	ICALL?L	L00001
	LABEL?L	L00002	

; G:\ELE\@BASIC\TAP_V62.PBP	00122	    IF TAP_SW = 1 THEN
	ICALL?L	L00001
	CMPNE?TCL	_TAP_SW, 001h, L00014

; G:\ELE\@BASIC\TAP_V62.PBP	00123	AR_TAP: pause 100

	LABEL?L	_AR_TAP	

; G:\ELE\@BASIC\TAP_V62.PBP	00123	AR_TAP: pause 100
	ICALL?L	L00001
	PAUSE?C	064h

; G:\ELE\@BASIC\TAP_V62.PBP	00124	        CONT_ATR = CONT_ATR + 1
	ICALL?L	L00001
	ADD?BCB	_CONT_ATR, 001h, _CONT_ATR

; G:\ELE\@BASIC\TAP_V62.PBP	00125	        IF TAP_SW = 1 THEN GOTO AR_TAP      
	ICALL?L	L00001
	CMPNE?TCL	_TAP_SW, 001h, L00016
	GOTO?L	_AR_TAP
	LABEL?L	L00016	

; G:\ELE\@BASIC\TAP_V62.PBP	00126	        pulsout led_tap,100
	ICALL?L	L00001
	PULSOUT?TC	_LED_TAP, 064h

; G:\ELE\@BASIC\TAP_V62.PBP	00127	        T1CON.0 = 0               
	ICALL?L	L00001
	MOVE?CT	000h, _T1CON??0

; G:\ELE\@BASIC\TAP_V62.PBP	00128	        IF CLICKS = 0 THEN
	ICALL?L	L00001
	CMPNE?BCL	_CLICKS, 000h, L00018

; G:\ELE\@BASIC\TAP_V62.PBP	00129	            INTCON.5    = 0	                                   
	ICALL?L	L00001
	MOVE?CT	000h, _INTCON??5

; G:\ELE\@BASIC\TAP_V62.PBP	00130	            TMR1H       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V62.PBP	00131	            TMR1L       = 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V62.PBP	00132	            DESBORDE    = 0
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V62.PBP	00133	            T1CON.0		= 1
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELE\@BASIC\TAP_V62.PBP	00134	            CONT_TAP	= 0            
	ICALL?L	L00001
	MOVE?CB	000h, _CONT_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00135	            for CONT_TAP = 0 to 10 
	ICALL?L	L00001
	MOVE?CB	000h, _CONT_TAP
	LABEL?L	L00020	
	CMPGT?BCL	_CONT_TAP, 00Ah, L00021

; G:\ELE\@BASIC\TAP_V62.PBP	00136	                VALOR[CONT_tap] = 0
	ICALL?L	L00001
	AIN?CWB	000h, _VALOR, _CONT_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00137	                BUCLE[CONT_tap] = 0            	
	ICALL?L	L00001
	AIN?CBB	000h, _BUCLE, _CONT_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00138	            next				                                                                                                                                                                                         
	ICALL?L	L00001
	NEXT?BCL	_CONT_TAP, 001h, L00020
	LABEL?L	L00021	

; G:\ELE\@BASIC\TAP_V62.PBP	00139	        ENDIF
	ICALL?L	L00001
	LABEL?L	L00018	

; G:\ELE\@BASIC\TAP_V62.PBP	00140	        IF CLICKS => 1 then    
	ICALL?L	L00001
	CMPLT?BCL	_CLICKS, 001h, L00022

; G:\ELE\@BASIC\TAP_V62.PBP	00141	            VALOR.BYTE0[CLICKS-1]	= TMR1L
	ICALL?L	L00001
	SUB?BCW	_CLICKS, 001h, T1
	AIN?BBW	TMR1L, _VALOR??BYTE0, T1

; G:\ELE\@BASIC\TAP_V62.PBP	00142	            VALOR.BYTE1[CLICKS-1]	= TMR1H                
	ICALL?L	L00001
	SUB?BCW	_CLICKS, 001h, T1
	AIN?BBW	TMR1H, _VALOR??BYTE1, T1

; G:\ELE\@BASIC\TAP_V62.PBP	00143	            BUCLE[CLICKS-1]			= DESBORDE              		    	
	ICALL?L	L00001
	SUB?BCW	_CLICKS, 001h, T1
	AIN?BBW	_DESBORDE, _BUCLE, T1

; G:\ELE\@BASIC\TAP_V62.PBP	00144	            AUX_1		= 0
	ICALL?L	L00001
	MOVE?CW	000h, _AUX_1

; G:\ELE\@BASIC\TAP_V62.PBP	00145	            AUX_2   	= 0
	ICALL?L	L00001
	MOVE?CW	000h, _AUX_2

; G:\ELE\@BASIC\TAP_V62.PBP	00146	            VALOR_P     = 0            
	ICALL?L	L00001
	MOVE?CW	000h, _VALOR_P

; G:\ELE\@BASIC\TAP_V62.PBP	00147	            BUCLE_P     = 0
	ICALL?L	L00001
	MOVE?CB	000h, _BUCLE_P

; G:\ELE\@BASIC\TAP_V62.PBP	00148	            CONT_TAP	= 1 	
	ICALL?L	L00001
	MOVE?CB	001h, _CONT_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00149	            FOR CONT_TAP = 1 TO CLICKS
	ICALL?L	L00001
	MOVE?CB	001h, _CONT_TAP
	LABEL?L	L00024	
	CMPGT?BBL	_CONT_TAP, _CLICKS, L00025

; G:\ELE\@BASIC\TAP_V62.PBP	00150	                AUX_1       = AUX_1 + (VALOR.BYTE0[CONT_TAP - 1])                 
	ICALL?L	L00001
	SUB?BCW	_CONT_TAP, 001h, T1
	AOUT?BWB	_VALOR??BYTE0, T1, T1
	ADD?WBW	_AUX_1, T1, _AUX_1

; G:\ELE\@BASIC\TAP_V62.PBP	00151	                AUX_2       = AUX_2 + (VALOR.BYTE1[CONT_TAP - 1]) 
	ICALL?L	L00001
	SUB?BCW	_CONT_TAP, 001h, T1
	AOUT?BWB	_VALOR??BYTE1, T1, T1
	ADD?WBW	_AUX_2, T1, _AUX_2

; G:\ELE\@BASIC\TAP_V62.PBP	00152	                BUCLE_P     = BUCLE_P + BUCLE[CONT_TAP-1]			 			            
	ICALL?L	L00001
	SUB?BCW	_CONT_TAP, 001h, T1
	AOUT?BWB	_BUCLE, T1, T1
	ADD?BBB	_BUCLE_P, T1, _BUCLE_P

; G:\ELE\@BASIC\TAP_V62.PBP	00153	            NEXT		
	ICALL?L	L00001
	NEXT?BCL	_CONT_TAP, 001h, L00024
	LABEL?L	L00025	

; G:\ELE\@BASIC\TAP_V62.PBP	00154	            valor_p.BYTE0   = AUX_1 / CLICKS
	ICALL?L	L00001
	DIV?WBB	_AUX_1, _CLICKS, _VALOR_P??BYTE0

; G:\ELE\@BASIC\TAP_V62.PBP	00155	            valor_p.BYTE1   = AUX_2 / CLICKS
	ICALL?L	L00001
	DIV?WBB	_AUX_2, _CLICKS, _VALOR_P??BYTE1

; G:\ELE\@BASIC\TAP_V62.PBP	00156	            BUCLE_P         = BUCLE_P / CLICKS
	ICALL?L	L00001
	DIV?BBB	_BUCLE_P, _CLICKS, _BUCLE_P

; G:\ELE\@BASIC\TAP_V62.PBP	00158	            if bucle_P => 20 then 
	ICALL?L	L00001
	CMPLT?BCL	_BUCLE_P, 014h, L00026

; G:\ELE\@BASIC\TAP_V62.PBP	00159	                bucle_P    = 19
	ICALL?L	L00001
	MOVE?CB	013h, _BUCLE_P

; G:\ELE\@BASIC\TAP_V62.PBP	00160	                VALOR_P    = 65530               
	ICALL?L	L00001
	MOVE?CW	0FFFAh, _VALOR_P

; G:\ELE\@BASIC\TAP_V62.PBP	00161	            ENDIF
	ICALL?L	L00001
	LABEL?L	L00026	

; G:\ELE\@BASIC\TAP_V62.PBP	00163	            TMR1H		= 0
	ICALL?L	L00001
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V62.PBP	00164	            TMR1L		= 0            
	ICALL?L	L00001
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V62.PBP	00165	            DESBORDE	= 0                		
	ICALL?L	L00001
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V62.PBP	00166	            T1CON.0		= 1						                               
	ICALL?L	L00001
	MOVE?CT	001h, _T1CON??0

; G:\ELE\@BASIC\TAP_V62.PBP	00167	            TIEMPO_TAP  = 3276 * BUCLE_P
	ICALL?L	L00001
	MUL?CBW	00CCCh, _BUCLE_P, _TIEMPO_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00168	            TIEMPO_TAP  = TIEMPO_TAP + (VALOR_P / 20)                       		
	ICALL?L	L00001
	DIV?WCW	_VALOR_P, 014h, T1
	ADD?WWW	_TIEMPO_TAP, T1, _TIEMPO_TAP

; G:\ELE\@BASIC\TAP_V62.PBP	00170	            LCDOUT $FE,$80,DEC TIEMPO_TAP
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	080h
	LCDOUTCOUNT?C	000h
	LCDOUTNUM?W	_TIEMPO_TAP
	LCDOUTDEC?	

; G:\ELE\@BASIC\TAP_V62.PBP	00172	        ENDIF	 
	ICALL?L	L00001
	LABEL?L	L00022	

; G:\ELE\@BASIC\TAP_V62.PBP	00173	        CLICKS = CLICKS + 1
	ICALL?L	L00001
	ADD?BCB	_CLICKS, 001h, _CLICKS

; G:\ELE\@BASIC\TAP_V62.PBP	00174	        CONT_ATR = 0                    
	ICALL?L	L00001
	MOVE?CB	000h, _CONT_ATR

; G:\ELE\@BASIC\TAP_V62.PBP	00175	        IF CLICKS = 11 THEN CLICKS = 0
	ICALL?L	L00001
	CMPNE?BCL	_CLICKS, 00Bh, L00028
	MOVE?CB	000h, _CLICKS
	LABEL?L	L00028	

; G:\ELE\@BASIC\TAP_V62.PBP	00176	        lcdout $fe,$88,dec2 clicks                                                    				    		             					                                     
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	088h
	LCDOUTCOUNT?C	002h
	LCDOUTNUM?B	_CLICKS
	LCDOUTDEC?	

; G:\ELE\@BASIC\TAP_V62.PBP	00177		ENDIF
	ICALL?L	L00001
	LABEL?L	L00014	

; G:\ELE\@BASIC\TAP_V62.PBP	00179	    IF CLICKS = 0 THEN 
	ICALL?L	L00001
	CMPNE?BCL	_CLICKS, 000h, L00030

; G:\ELE\@BASIC\TAP_V62.PBP	00180	        ADRESH      = 0
	ICALL?L	L00001
	MOVE?CB	000h, ADRESH

; G:\ELE\@BASIC\TAP_V62.PBP	00181	        ADRESL      = 0                
	ICALL?L	L00001
	MOVE?CB	000h, ADRESL

; G:\ELE\@BASIC\TAP_V62.PBP	00182	        ADCON0.1    = 1   
	ICALL?L	L00001
	MOVE?CT	001h, _ADCON0??1

; G:\ELE\@BASIC\TAP_V62.PBP	00183	LEC:    if PIR1.6 = 0 then LEC

	LABEL?L	_LEC	

; G:\ELE\@BASIC\TAP_V62.PBP	00183	LEC:    if PIR1.6 = 0 then LEC
	ICALL?L	L00001
	CMPEQ?TCL	_PIR1??6, 000h, _LEC

; G:\ELE\@BASIC\TAP_V62.PBP	00184	        PIR1.6 = 0                
	ICALL?L	L00001
	MOVE?CT	000h, _PIR1??6

; G:\ELE\@BASIC\TAP_V62.PBP	00185	        adc_a = 0
	ICALL?L	L00001
	MOVE?CW	000h, _ADC_A

; G:\ELE\@BASIC\TAP_V62.PBP	00186	        adc_a = ADRESH * 255 
	ICALL?L	L00001
	MUL?BCW	ADRESH, 0FFh, _ADC_A

; G:\ELE\@BASIC\TAP_V62.PBP	00187	        adc_a = adc_a + ADRESL              
	ICALL?L	L00001
	ADD?WBW	_ADC_A, ADRESL, _ADC_A

; G:\ELE\@BASIC\TAP_V62.PBP	00188	        if adc_a < (adc_l - 2) or adc_a > (adc_l + 2) then
	ICALL?L	L00001
	SUB?WCW	_ADC_L, 002h, T1
	CMPLT?WWB	_ADC_A, T1, T1
	ADD?WCW	_ADC_L, 002h, T2
	CMPGT?WWB	_ADC_A, T2, T2
	LOR?BBW	T1, T2, T2
	CMPF?WL	T2, L00032

; G:\ELE\@BASIC\TAP_V62.PBP	00189	            corregir = 0
	ICALL?L	L00001
	MOVE?CT	000h, _CORREGIR

; G:\ELE\@BASIC\TAP_V62.PBP	00190	            adc_l = adc_a        
	ICALL?L	L00001
	MOVE?WW	_ADC_A, _ADC_L

; G:\ELE\@BASIC\TAP_V62.PBP	00191	            delay = adc_a / 4                              
	ICALL?L	L00001
	DIV?WCB	_ADC_A, 004h, _DELAY

; G:\ELE\@BASIC\TAP_V62.PBP	00192	            HPWM 1,delay,10000
	ICALL?L	L00001
	HPWM?CBC	001h, _DELAY, 02710h

; G:\ELE\@BASIC\TAP_V62.PBP	00193	            lcdout $fe,$8D,dec3 delay,$fe,$CC,dec4 adc_A
	ICALL?L	L00001
	LCDOUT?C	0FEh
	LCDOUT?C	08Dh
	LCDOUTCOUNT?C	003h
	LCDOUTNUM?B	_DELAY
	LCDOUTDEC?	
	LCDOUT?C	0FEh
	LCDOUT?C	0CCh
	LCDOUTCOUNT?C	004h
	LCDOUTNUM?W	_ADC_A
	LCDOUTDEC?	

; G:\ELE\@BASIC\TAP_V62.PBP	00194	        endif
	ICALL?L	L00001
	LABEL?L	L00032	

; G:\ELE\@BASIC\TAP_V62.PBP	00195	    ENDIF 	
	ICALL?L	L00001
	LABEL?L	L00030	

; G:\ELE\@BASIC\TAP_V62.PBP	00197	    goto MAIN       															
	ICALL?L	L00001
	GOTO?L	_MAIN

; G:\ELE\@BASIC\TAP_V62.PBP	00202	disable    
	DISABLE?	

; G:\ELE\@BASIC\TAP_V62.PBP	00203	INTERRUPCION:

	LABEL?L	_interrupcion	

; G:\ELE\@BASIC\TAP_V62.PBP	00204	    IF INTCON.2 = 1 THEN        
	CMPNE?TCL	_INTCON??2, 001h, L00034

; G:\ELE\@BASIC\TAP_V62.PBP	00205	        contador = contador + 1
	ADD?BCB	_CONTADOR, 001h, _CONTADOR

; G:\ELE\@BASIC\TAP_V62.PBP	00206	        if contador = 168 then  
	CMPNE?BCL	_CONTADOR, 0A8h, L00036

; G:\ELE\@BASIC\TAP_V62.PBP	00207	            pulsout LED_TAP,100
	PULSOUT?TC	_LED_TAP, 064h

; G:\ELE\@BASIC\TAP_V62.PBP	00208	            T1CON.0 = 0
	MOVE?CT	000h, _T1CON??0

; G:\ELE\@BASIC\TAP_V62.PBP	00209	            TIMER1.BYTE0 = TMR1L
	MOVE?BB	TMR1L, _TIMER1??BYTE0

; G:\ELE\@BASIC\TAP_V62.PBP	00210	            TIMER1.BYTE1 = TMR1H
	MOVE?BB	TMR1H, _TIMER1??BYTE1

; G:\ELE\@BASIC\TAP_V62.PBP	00211	            AUX_3 = DESBORDE
	MOVE?BB	_DESBORDE, _AUX_3

; G:\ELE\@BASIC\TAP_V62.PBP	00212	            TMR1H = 0
	MOVE?CB	000h, TMR1H

; G:\ELE\@BASIC\TAP_V62.PBP	00213	            TMR1L = 0
	MOVE?CB	000h, TMR1L

; G:\ELE\@BASIC\TAP_V62.PBP	00214	            DESBORDE = 0
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V62.PBP	00215	            T1CON.0 = 1                        
	MOVE?CT	001h, _T1CON??0

; G:\ELE\@BASIC\TAP_V62.PBP	00216	            TIEMPO_CLK = 3276 * AUX_3
	MUL?CBW	00CCCh, _AUX_3, _TIEMPO_CLK

; G:\ELE\@BASIC\TAP_V62.PBP	00217	            TIEMPO_CLK = TIEMPO_CLK + (TIMER1 / 20)
	DIV?WCW	_TIMER1, 014h, T1
	ADD?WWW	_TIEMPO_CLK, T1, _TIEMPO_CLK

; G:\ELE\@BASIC\TAP_V62.PBP	00219	            if corregir = 1 then
	CMPNE?TCL	_CORREGIR, 001h, L00038

; G:\ELE\@BASIC\TAP_V62.PBP	00220	                if (tiempo_clk / 100) < ((tiempo_tap / 100) - 100) then delay = delay + 10
	DIV?WCW	_TIEMPO_CLK, 064h, T1
	DIV?WCW	_TIEMPO_TAP, 064h, T2
	SUB?WCW	T2, 064h, T2
	CMPGE?WWL	T1, T2, L00040
	ADD?BCB	_DELAY, 00Ah, _DELAY
	LABEL?L	L00040	

; G:\ELE\@BASIC\TAP_V62.PBP	00221	                if (tiempo_clk / 100) < ((tiempo_tap / 100) - 50) then delay = delay + 5                
	DIV?WCW	_TIEMPO_CLK, 064h, T1
	DIV?WCW	_TIEMPO_TAP, 064h, T2
	SUB?WCW	T2, 032h, T2
	CMPGE?WWL	T1, T2, L00042
	ADD?BCB	_DELAY, 005h, _DELAY
	LABEL?L	L00042	

; G:\ELE\@BASIC\TAP_V62.PBP	00222	                if (tiempo_clk / 100) < ((tiempo_tap / 100) - 2) then delay = delay + 1
	DIV?WCW	_TIEMPO_CLK, 064h, T1
	DIV?WCW	_TIEMPO_TAP, 064h, T2
	SUB?WCW	T2, 002h, T2
	CMPGE?WWL	T1, T2, L00044
	ADD?BCB	_DELAY, 001h, _DELAY
	LABEL?L	L00044	

; G:\ELE\@BASIC\TAP_V62.PBP	00223	                if (tiempo_clk / 100) > ((tiempo_tap / 100) + 100) then delay = delay - 10                
	DIV?WCW	_TIEMPO_CLK, 064h, T1
	DIV?WCW	_TIEMPO_TAP, 064h, T2
	ADD?WCW	T2, 064h, T2
	CMPLE?WWL	T1, T2, L00046
	SUB?BCB	_DELAY, 00Ah, _DELAY
	LABEL?L	L00046	

; G:\ELE\@BASIC\TAP_V62.PBP	00224	                if (tiempo_clk / 100) > ((tiempo_tap / 100) + 50) then delay = delay - 5
	DIV?WCW	_TIEMPO_CLK, 064h, T1
	DIV?WCW	_TIEMPO_TAP, 064h, T2
	ADD?WCW	T2, 032h, T2
	CMPLE?WWL	T1, T2, L00048
	SUB?BCB	_DELAY, 005h, _DELAY
	LABEL?L	L00048	

; G:\ELE\@BASIC\TAP_V62.PBP	00225	                if (tiempo_clk / 100) > ((tiempo_tap / 100) + 2) then delay = delay - 1                
	DIV?WCW	_TIEMPO_CLK, 064h, T1
	DIV?WCW	_TIEMPO_TAP, 064h, T2
	ADD?WCW	T2, 002h, T2
	CMPLE?WWL	T1, T2, L00050
	SUB?BCB	_DELAY, 001h, _DELAY
	LABEL?L	L00050	

; G:\ELE\@BASIC\TAP_V62.PBP	00227	                hpwm 1,delay,10000                                
	HPWM?CBC	001h, _DELAY, 02710h

; G:\ELE\@BASIC\TAP_V62.PBP	00229	                if (tiempo_clk / 100) < ((tiempo_tap / 100) + 2) and (tiempo_clk / 100) > ((tiempo_tap / 100) - 2) then corregir = 0
	DIV?WCW	_TIEMPO_CLK, 064h, T1
	DIV?WCW	_TIEMPO_TAP, 064h, T2
	ADD?WCW	T2, 002h, T2
	CMPLT?WWB	T1, T2, T2
	DIV?WCW	_TIEMPO_CLK, 064h, T3
	DIV?WCW	_TIEMPO_TAP, 064h, T4
	SUB?WCW	T4, 002h, T4
	CMPGT?WWB	T3, T4, T4
	LAND?BBW	T2, T4, T4
	CMPF?WL	T4, L00052
	MOVE?CT	000h, _CORREGIR
	LABEL?L	L00052	

; G:\ELE\@BASIC\TAP_V62.PBP	00231	            endif
	LABEL?L	L00038	

; G:\ELE\@BASIC\TAP_V62.PBP	00233	            LCDOUT $FE,$C0,DEC5 TIEMPO_CLK                            
	LCDOUT?C	0FEh
	LCDOUT?C	0C0h
	LCDOUTCOUNT?C	005h
	LCDOUTNUM?W	_TIEMPO_CLK
	LCDOUTDEC?	

; G:\ELE\@BASIC\TAP_V62.PBP	00234	            contador = 0          
	MOVE?CB	000h, _CONTADOR

; G:\ELE\@BASIC\TAP_V62.PBP	00235	        endif      
	LABEL?L	L00036	

; G:\ELE\@BASIC\TAP_V62.PBP	00236	    ENDIF
	LABEL?L	L00034	

; G:\ELE\@BASIC\TAP_V62.PBP	00238	    IF PIR1.0 = 1 THEN 
	CMPNE?TCL	_PIR1??0, 001h, L00054

; G:\ELE\@BASIC\TAP_V62.PBP	00239	        DESBORDE = DESBORDE + 1
	ADD?BCB	_DESBORDE, 001h, _DESBORDE

; G:\ELE\@BASIC\TAP_V62.PBP	00240	        IF DESBORDE > 25 THEN
	CMPLE?BCL	_DESBORDE, 019h, L00056

; G:\ELE\@BASIC\TAP_V62.PBP	00241	            DESBORDE    = 0
	MOVE?CB	000h, _DESBORDE

; G:\ELE\@BASIC\TAP_V62.PBP	00242	            if clicks > 1 then corregir = 1
	CMPLE?BCL	_CLICKS, 001h, L00058
	MOVE?CT	001h, _CORREGIR
	LABEL?L	L00058	

; G:\ELE\@BASIC\TAP_V62.PBP	00243	            CLICKS      = 0
	MOVE?CB	000h, _CLICKS

; G:\ELE\@BASIC\TAP_V62.PBP	00244	            INTCON.5    = 1
	MOVE?CT	001h, _INTCON??5

; G:\ELE\@BASIC\TAP_V62.PBP	00245	        ENDIF
	LABEL?L	L00056	

; G:\ELE\@BASIC\TAP_V62.PBP	00246	    ENDIF                                                             				             								 														                                                                                               
	LABEL?L	L00054	

; G:\ELE\@BASIC\TAP_V62.PBP	00247	    INTCON.2    = 0 ; FLAG TMR0
	MOVE?CT	000h, _INTCON??2

; G:\ELE\@BASIC\TAP_V62.PBP	00248	    PIR1.0      = 0 ; FLAG TMR1  				                                                            
	MOVE?CT	000h, _PIR1??0

; G:\ELE\@BASIC\TAP_V62.PBP	00249	RESUME
	RESUME?	

; G:\ELE\@BASIC\TAP_V62.PBP	00250	ENABLE          
	ENABLE?	

; G:\ELE\@BASIC\TAP_V62.PBP	00252	END
	ICALL?L	L00001
	END?	

	END
